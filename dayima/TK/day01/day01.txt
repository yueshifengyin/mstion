<< tkinter 教学笔记>>

  GUI(Graphical User Interface) 图形用户接口

GUI种类:
  Qt,Gtk, MFC

python下的GUI种类:
  tkinter(当前学习)
  wxpython
  pyQt


从tkinter的空白窗口说起:
  tkinter 是python的模块包，使用时需要导入:
       import tkinter
       或
       from tkinter import xxx
       或
       from tkinter import *

空白窗口示例：
#第一步: 导入tkinter 模块包
import tkinter

# 第二步，创建一个空白窗口
# Tk是tkinter里的类，此时创建一个空白窗口对象
root = tkinter.Tk()

print("正要进入主事件循环")
# 第三步，进入主事件循环,等待用户输入相应的操作(键盘，鼠标等)
root.mainloop()
print("主事件循环结束!")

让tkinter GUI 程序启动和运行起来需要 5个步骤：
  1. 导入 tkinter模块
      import tkinter/from tkinter import xxx/* )
  2. 创建一个空白窗口对象，用于容纳整个GUI应用
  3. 在空白窗口对象之上（或其中)构建所有的GUI组件(widget) 及其功能
  4. 通过底层的应用代码将这些GUI组件连接起来
  5. 进入主事件循环

第一个hello world程序：
# 第一步
import tkinter

# 第二步，创建空白窗口,用root变量绑定
root = tkinter.Tk()

# 第三步, 创建一个Label 窗口控件,
# 让root作为它的父窗口
label = tkinter.Label(root, text='hello world!')

# 第四步, 让label 放置到窗口的指定位置
label.pack()

# 第五步，进入主事件循环
root.mainloop()


tkinter 常见的窗口部件(控件)
  Label, Button, Entry, Checkbutton

见:
import tkinter

root = tkinter.Tk()

# 创建一个label并添加到主窗口
label = tkinter.Label(root, text="我是一个Label")
label.pack()

# 创建一个Button 并添加到主窗口
btn = tkinter.Button(root, text="我是一个Button")
btn.pack()

# 创建一个Entry
entry=tkinter.Entry(root, text="我是Entry!")
entry.pack()

# 创建一个Checkbutton...
cb = tkinter.Checkbutton(root, text='点我试试')
cb.pack()

# 进入主事件循环
root.mainloop()


Label 控件:
  作用：
    用于显示内容的文字
    用显显示图片信息
  说明：
    Label支持的图片类型为:
        GIF, PGM, PPM图片
  Label的属性:
    text: 文字信息
    bg:   背景色(background)
    fg:   前景色(foreground)
    width: 宽(字符宽为单位)
    height: 高(行为单位)
    image:  图片

示例见：
import tkinter

root = tkinter.Tk()

label = tkinter.Label(root, text="Hello Xi'an!",
                      bg='orange',
                      fg='blue')

# class Label(widget):
#     def __init__(self, master, text='', bg='black', fg='gray'):
#         self.__text= text


label.pack()

root.mainloop()



图片类:
  PhotoImage
    file 属性 : 指定图片的路径
  示例见:
import tkinter

root = tkinter.Tk()

img1 = tkinter.PhotoImage(file='./sign_images/stone.gif')
label = tkinter.Label(root, bg='orange', image=img1)
label.pack()

img2 = tkinter.PhotoImage(file='./sign_images/clipper.gif')
label = tkinter.Label(root, image=img2)
label.pack()

img3 = tkinter.PhotoImage(file='./sign_images/cloth.gif')
label = tkinter.Label(root, image=img3)
label.pack()

root.mainloop()

快捷键说明：
  ctrl + c  终止程序(转为僵尸状态)
  ctrl + z  停止程序（转为停止状态,可用fg命令恢复运行)

tkinter颜色:
  1. 几乎全部的表示颜色的英文的字符串
    'red', 'green', 'blue', 'yellow', 'gray'..
  2. 十六进制的RGB(Red, Green, Blue)红绿蓝三原色显示
    "#FF0000"  红色  (24bit色)
    "#00FF00"  绿色
    "#0000FF"  蓝色

import tkinter

root = tkinter.Tk()

label = tkinter.Label(root, text="文字",
                      bg='#FF0000',
                      fg='#0000FF')

label.pack()
root.mainloop()






Button 按钮控件
  作用：
    给计算机提供一个命令输入
  属性：
    text : 文字
    fg: 前景色
    bg: 背景色
    width: 宽(像素)
    image: 图片
    bitmap: 位图
      'error', 'info', 'question'
    command: 执行回调操作

import tkinter
root = tkinter.Tk()

# 用文件创建一个照片对象
img = tkinter.PhotoImage(file='./sign_images/stone.gif')

btn = tkinter.Button(root, image=img)  # 让img对象作为button前景
btn.pack()

root.mainloop()

import tkinter
root = tkinter.Tk()


def onClick():
    print("'Click me!' 按钮被点击")

btn = tkinter.Button(root, text='Click me!',
                     command=onClick)

btn.pack()

root.mainloop()

Entry 控件
  作用：
    用于获取用户的文本输入(写input类似)
  属性:
    fg : 文字颜色
    bg : 背景色
    borderwidth: 边框宽度
  方法：
  　　get()  获取文本框的内容
示例见：
import tkinter as tk

root = tk.Tk()
entry = tk.Entry(root)
entry.pack()


def onBtn():
    # entry.get() 返回输入框内的内容字符串
    print("输入框里的内容是:", entry.get())


btn = tk.Button(root, text="在终端打印输入",
                command=onBtn)
btn.pack()
root.mainloop()

Checkbutton控件:
  属性:
    text: 文本内容
    bg/fg : 略
    variable : tkinter的整数变量
    command: 回调函数
    font : 字体(字体，颜色，样式)

IntVar变量:
  属性:
    value: 整数值，默认为0

import tkinter

root = tkinter.Tk()

def onCheckBtn():
    # var.get() 方法可以得到Checkbutton的状态
    print("Checkbutton按钮被点击!", var.get())


var = tkinter.IntVar(root)
check = tkinter.Checkbutton(root,
                            text="自动登陆",
                            command=onCheckBtn,
                            variable=var)
check.pack()
root.mainloop()

字体 font
  示例见:

import tkinter

root = tkinter.Tk()

check1 = tkinter.Checkbutton(root,
                             text="这是中文",
                             font=("黑体", 20))
check1.pack()

check2 = tkinter.Checkbutton(root,
                             text="这是中文",
                             font=("宋体", 30))
check2.pack()

root.mainloop()






